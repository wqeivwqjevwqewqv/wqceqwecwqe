-- _G.Activate = true
-- _G.FirstWait = 0
-- _G.LogAcc = true
-- _G.LOGFPS = true
-- _G.Linetoken = "IFrNuMoL2l7CnMJEOYrT9C6nur9GzIII0LVfAhA3MeX"
-- _G.LockBeliActivate = true
-- _G.LockBeli = 1000000
-- _G.CheckSheet = true
-- _G.RareModeActivate = false
-- _G.RareMode = 3
-- _G.LogInventoryActivate = true
-- _G.LogInventory = {"Tushita", "Dark Dagger", "Hallow Scythe", "Dark Coat", "True Triple Katana"}
-- _G.SheetBest = "https://sheet.best/api/sheets/bef8b0ee-e57a-40d6-acdb-0caa5fbe8e71"
-- _G.Webhook = "https://discord.com/api/webhooks/960294659958120538/fQoPhQTSOy2JknGf4eANJV-UN2kIXdW-Rh4nHpj1fX833ekF2dSm2JIQaCdQppqCJRRB"

repeat print('WAITING GAME LOAD') wait(1) until game:IsLoaded()
if not game:IsLoaded() then game.Loaded:Wait() end
repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.ReplicatedStorage
repeat wait() until game.ReplicatedStorage:FindFirstChild("Remotes");
repeat wait() until game.Players.LocalPlayer:FindFirstChild("PlayerGui");
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main");

repeat wait()

   if game.Players.LocalPlayer.Team == nil then
   warn("WAITING CHOOSE TEAM EIEIEIEIEI")
   wait(.5)
   end

until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()

warn('Script Running')
print('LAST UPDATE ON 28/07 16:45')

spawn(function()

   local uis = game:GetService("UserInputService")
   local size = workspace.CurrentCamera.ViewportSize

   uis.WindowFocused:Connect(function() 
      game:GetService("RunService"):Set3dRenderingEnabled(true)
   end)

   uis.WindowFocusReleased:Connect(function() 
      game:GetService("RunService"):Set3dRenderingEnabled(false)
   end)
end)
-- FAST ATTACK --
spawn(function()
   warn("LOADED FAST ATTACK")
   while wait(.1) do pcall(function()
      function Getresume(s)
         s.activeController.timeToNextAttack = 0
      end

      local Rig = require(game:GetService("Players").LocalPlayer.PlayerScripts.CombatFramework)
   end)
end
end)
-----------------------
if game.CoreGui:FindFirstChild("Kiwwylib") then
   game.CoreGui:FindFirstChild("Kiwwylib"):Destroy()
end

if _G.FirstWait ~= nil then
   wait(_G.FirstWait)
else
   wait(10)
end
-----------------------
function time()
   return ""..os.date("%H")..":"..os.date("%M")..":"..os.date("%S")
end
req = request or syn.request
makefolder("Kiwwy")
print(time() .. " -> " .. game.Players.LocalPlayer.Name)

-- check have 2 file then del all
if isfile("Kiwwy/"..game.Players.LocalPlayer.Name..".txt")  and isfile("Kiwwy/"..game.Players.LocalPlayer.Name.."_success.txt") then
   print(time() .. " -> " .."Have Succes And Normal File")
   delfile("Kiwwy/"..game.Players.LocalPlayer.Name..".txt")
   delfile("Kiwwy/"..game.Players.LocalPlayer.Name.."_success.txt")
   print(time() .. " -> " .."Delete Success")
end

-- check is succes then shutdown

--------------------------------


local ScreenGui = Instance.new("ScreenGui")
local TextLabel = Instance.new("TextLabel")

ScreenGui.Name = "Kiwwylib"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TextLabel.Parent = ScreenGui
TextLabel.Position = UDim2.new(0.1, 0, 0.1, 0)
TextLabel.Size = UDim2.new(0, 300, 0, 200)
TextLabel.Font = Enum.Font.Cartoon
TextLabel.BackgroundTransparency = 1
TextLabel.TextXAlignment = Enum.TextXAlignment.Left
TextLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 50.000
if _G.Activate then
   TextLabel.Text = "Starting ... "
else
   TextLabel.Text = "No Config ?"
end



problemlist = {}



if tostring(_G.Activate or _G.FirstWait or _G.Linetoken or _G.LockBeliActivate or _G.LockBeli or _G.CheckSheet or _G.RareModeActivate or _G.RareMode or _G.LogInventoryActivate or _G.SheetBest) == nil then
   print(_G.Activate , _G.FirstWait , _G.Linetoken , _G.LockBeliActivate , _G.LockBeli , _G.CheckSheet , _G.RareModeActivate , _G.RareMode , _G.LogInventoryActivate , _G.SheetBest)
   TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
   warn("CONFIG NOT COMPLETE")
   TextLabel.Text = "CONFIG NOT COMPLETE !!!"
   return

else
   if (_G.LogInventory) == nil then
      TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
      warn("CONFIG NOT COMPLETE")
      TextLabel.Text = "CONFIG NOT COMPLETE !!!"
      return
   end
end

if _G.RareModeActivate and _G.LogInventoryActivate then
   TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
   TextLabel.Text = "DONT OPEN LOGINV WITH RARE MODE !!!"
   return
end
function reformatint(integer)
   for i = 1, math.floor((string.len(integer)-1) / 3) do
      integer = string.sub(integer, 1, -3*i-i) ..
      ',' ..
      string.sub(integer, -3*i-i+1)
   end
   return integer
end
function reformatmoney(n)
      if n >= 10^6 then
          return string.format("%.2f M", n / 10^6)
      elseif n >= 10^3 then
          return string.format("%.2f K", n / 10^3)
      else
          return tostring(n)
      end
end
------------------
-- disconnect webhook
warn('loaded auto webhook')
function dcwebhook()
   if _G.Webhook ~= nil or _G.Webhook ~= "" then
      local GuiService = game:GetService'GuiService'
      local url = _G.Webhook
      local data = {
      ["content"] = "Disconnect",
      ["embeds"] = {
            {
               ["title"] = "**Disconnected!**",
               ["description"] = "Username: ```" .. game.Players.LocalPlayer.Name .. "``` Code: ```" .. GuiService:GetErrorCode().Value .. "``` Message: ```" .. GuiService:GetErrorMessage() .. "```",
               ["type"] = "rich",
               ["footer"] = {
                  ["text"] = "LOG BY KIWWY. | " .. timestamp()
               },
               ["color"] = tonumber(0x7269da),
            }
      }
      }
      local newdata = game:GetService("HttpService"):JSONEncode(data)

      local headers = {
      ["content-type"] = "application/json"
      }
      request = http_request or request or HttpPost or syn.request
      local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
      request(abcdef)
   end
end

do -- Connections
   local GuiService = game:GetService'GuiService'
   GuiService.ErrorMessageChanged:Connect(function()

      local Code = GuiService:GetErrorCode().Value

      if Code >= Enum.ConnectionError.DisconnectErrors.Value then
            if Code > Enum.ConnectionError.PlacelaunchOtherError.Value then
               return
            end
            
            dcwebhook()
      end
   end)
end
------------------
function World()
      local world
  
      if game.PlaceId == 2753915549 then
          world = 1
      elseif game.PlaceId == 4442272183 then
          world = 2
      elseif game.PlaceId == 7449423635 then
          world = 3
      end
  
      return world
  
  end
function sheetbest()

  function inventory()
  nah = {}
  
  for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
      if v.ToolTip == "Sword" then
          table.insert(nah,v.Name)
          print(v.Name)
          end
      end
      
  for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do pcall(function()
      
      if v.ToolTip == "Sword" then
          table.insert(nah,v.Name)
          print(v.Name)
      end
  end)
  end
  

   if _G.RareModeActivate then
      for i,v in pairs (game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryWeapons")) do
         -- print(v.Name)
            if _G.RareMode ~= nil or _G.RareMode ~= "" then
               if v.Rarity >= _G.RareMode then
                  print(v.Name , v.Type)
                  table.insert(nah,v.Name)
               elseif v.Type == "Wear" and v.Rarity >= _G.RareMode then
                  print(v.Name , v.Type)
                  table.insert(nah,v.Name)
               end
            else
               -- table.insert(nah,v.Name)
            end
         end
   elseif _G.LogInventoryActivate then
      for i,v in pairs (game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryWeapons")) do
         for w,e in pairs (_G.LogInventory) do
               if v.Name == tostring(e) then
                  table.insert(nah,e)
               end
         end
      end
   end

  
      
  
  allweapon = table.concat(nah,", ")
  print(allweapon)
  return allweapon
  end
  
   function checkfruit()
      fruitlist = {}
      for i,v in pairs (game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryFruits")) do 
      --  print(v.Name:split("-")[1])
      table.insert(fruitlist,v.Name:match("%-(.+)"))
      end
      if unpack(fruitlist) ~= nil then
         allfruit = table.concat(fruitlist , ", ")
         print(allfruit)
         return tostring(allfruit)
      else
         return "None"
      end
   end
   
   function checkmelee()
      listcheckmelee = {["Superhuman"] = 0,["DragonTalon"] = 0,["ElectricClaw"] = 0,["SharkmanKarate"] = 0 , ["DeathStep"] = 0}
      checksup = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman",true)
      if checksup == 1 then
         print("Super")
         listcheckmelee['Superhuman'] = 1
      end

      checktalon = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDragonTalon",true)
      if checktalon == 1 then
         print("Talon")
         listcheckmelee['DragonTalon'] = 1
      end

      checkelec = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw",true)
      if checkelec == 1 then
         print("Electric")
         listcheckmelee['ElectricClaw'] = 1
      end
      Shark = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate",true)
      if Shark == 1 then
         print("Sharkman")
         listcheckmelee['SharkmanKarate'] = 1
      end
      Death = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep",true)
      if Death == 1 then
         print("DeathStep")
         listcheckmelee['DeathStep'] = 1
      end

      realmelee = {}
      for i,v in pairs (listcheckmelee) do
         if v == 1 then
            print(i)
            table.insert(realmelee,tostring(i))
         end
      end

      print(table.concat(realmelee,", "))
      return (table.concat(realmelee,", "))
   end

   function logsomething(haha)
      local data = haha
      qwevwqv = req({
            Url = _G.SheetBest,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = game.HttpService:JSONEncode(data)
      })
      
      print(qwevwqv.Body)
   end
   
   function logsheet()
      local data = {
            ["Name"] = game.Players.LocalPlayer.Name,
            ["Level"] = reformatint(game.Players.LocalPlayer.Data.Level.Value),
            ["World"] = World(),
            ["Inventory"] = inventory(),
            ["Beli"] = tostring(reformatmoney(game:GetService("Players").LocalPlayer.Data.Beli.Value)),
            ["Fragment"] = tostring(reformatmoney(game:GetService("Players").LocalPlayer.Data.Fragments.Value)),
            ["Race"] = game:GetService("Players").LocalPlayer.Data.Race.Value,
            ["Fruit"] = tostring(Fruit:split('-')[1] .. " (" .. ValueFruit .. " Mas.)"),
            ["Awake"] = tostring(awaked),
            ["Skill"] = tostring(skill),
            ["Melee"] = checkmelee(),
            ["Fruit Inventory"] = checkfruit(),
            
      }
      qwevwqv = req({
            Url = _G.SheetBest,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = game.HttpService:JSONEncode(data)
      })
      
      print(qwevwqv.Body)
   end
   function httpget(url)
      qwevwqev = req({
          Url = url,
          Method = "GET",
      })
      
      print(qwevwqev.Body)
      return qwevwqev.Body
   end

   if _G.CheckSheet then
      if httpget(_G.SheetBest):find(game.Players.LocalPlayer.Name) then
         print("HAVE DATA")
         return
     else
         print("NO DATA")
         logsheet()
      end
   
   else
      logsheet()
   end

end

function checkmoney()
   if _G.LockBeliActivate then
      if _G.LockBeli == nil or _G.LockBeli == "" then
         return
      else
         if game:GetService("Players").LocalPlayer.Data.Beli.Value >= _G.LockBeli then
            print("NOW BELI = ".. game:GetService("Players").LocalPlayer.Data.Beli.Value)
            return true
         else
            print("nah no money")
            return false
         end
      end
   else
      warn("LOCK BELI CLOSEING")
      return
   end
end


-- ACC FUNCTION --

fpslower = 0
function GETFPS()
    if _G.LOGFPS then
        FPS = workspace:GetRealPhysicsFPS()
        if FPS < 15 then
            fpslower = fpslower + 1
            print("Fps Low " .. fpslower)
            return("Fps Low " .. fpslower)
        else
            fpslower = 0
            print("Normal " .. fpslower)
            return("Normal")
        end
    else
        return ''
    end
end

function setalias(text)
   if _G.LogAcc then
      a = syn.request({
         Url = "http://localhost:7963/SetAlias?Account="..game.Players.LocalPlayer.Name.."&Password=123456789";
         Method = "POST";
         Body = text
         })
      warn(a.Body)
   end
end

function setdes(text)
   if _G.LogAcc then
      a = syn.request({
         Url = "http://localhost:7963/SetDescription?Account="..game.Players.LocalPlayer.Name.."&Password=123456789";
         Method = "POST";
         Body = text
         })
      warn(a.Body)
   end
end
-----------------------
spawn(function()
   while true do
      oldpost = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
      oldlv = game.Players.LocalPlayer.Data.Level.Value
      print(oldpost , oldlv)
      warn("WAIT 300 SEC.")
      wait(300)
      newpost = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
      newlv = game.Players.LocalPlayer.Data.Level.Value
      print(oldpost , oldlv)
      print(newpost , newlv)
      if oldpost == newpost and oldlv == newlv then
         game.Players.LocalPlayer:Kick("KIWWY AFK CHECK")
         local tpservice = game:GetService("TeleportService")
         local plr = game.Players.LocalPlayer
         tpservice:Teleport(game.PlaceId, plr)
      else
         print("NO AFK")
      end
   end
end)
-----------------------
spawn(function()
   while _G.LogAcc do
      setdes("Level: " .. game.Players.LocalPlayer.Data.Level.Value .. " " .. tostring(GETFPS()))
      wait(5)
      if fpslower >= 6 then
         HopServerKiwwy()
      end
   end
end)
-----------------------
spawn(function()
   if _G.LogAcc then
      pcall(function()
      Nexus:CreateButton('Logger', 'SheetBest', { 100, 20 }, { 10, 10, 10, 10 })
      Nexus:OnButtonClick('Logger', function() loadstring(game:HttpGet'https://raw.githubusercontent.com/wqeivwqjevwqewqv/wqceqwecwqe/main/logwelrvpoewrv.lua')() end)
      end)
   end
end)
-----------------------
function HopServerKiwwy()
   for timehop=100,1,-1 do
      a = game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer(timehop)
      -- print(timehop)
      for i,v in pairs (a) do
          print(i,v.Region,v.Count)
          -- if v.Region:find("Singapore") and v.Count <= 7 then
          if v.Count <= 7 then
              warn(v.Region,v.Count)
              game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, i, game.Players.LocalPlayer)
              return
          end
      end
  end
  
  print("CANT FIND")
end
-----------------------

  
while _G.Activate do
   wait(3)
   pcall(function()
      game:GetService("Players").LocalPlayer.PlayerGui.Main.Fragments.Position = UDim2.new(0,200,0,400)
      game:GetService("Players").LocalPlayer.PlayerGui.Main.Fragments.Text = "ƒ"..tostring(reformatint(game.Players.LocalPlayer.Data.Fragments.Value))

      if game:GetService("Players").LocalPlayer.Data.DevilFruit.Value ~= "" then

         Fruit = game:GetService("Players").LocalPlayer.Data.DevilFruit.Value
         ValueFruit1 = game.Players.LocalPlayer.Backpack:FindFirstChild(Fruit) or game.Players.LocalPlayer.Character:FindFirstChild(Fruit)
         ValueFruit = ValueFruit1.Level.Value

         print(Fruit)
         SkillValue = require(ValueFruit1.Data).Lvl
         print(SkillValue["Z"],SkillValue["F"],SkillValue["X"],SkillValue["C"],SkillValue["V"])
         if ValueFruit >= SkillValue["Z"] then
            print("Z")
            Z = true
         end
         if Fruit ~= "Quake-Quake" then
            if ValueFruit >= SkillValue["F"] then
               print("F")
               F = true
            end
         end
         if ValueFruit >= SkillValue["X"] then
            print("X")
            X = true
         end
         if ValueFruit >= SkillValue["C"] then
            print("C")
            C = true
         end

         if SkillValue["V"]  then
            if ValueFruit >= SkillValue["V"] then
               print("V")
               V = true
            end
         end
         skill = ""
         if Z then
            skill = skill .. "Z "
         end
         if X then
            skill = skill .. "X "
         end
         if C then
            skill = skill .. "C "
         end
         if V then
            skill = skill .. "V "
         end
         if F then
            skill = skill .. "F "
         end
         if skill == "" then
            skill = "None"
         end
         print(skill)

         awaked = ""
         CanAwake = ValueFruit1:FindFirstChild("AwakenedMoves")
         if CanAwake then
            print("Can Awake this")

            for i,v in pairs(ValueFruit1.AwakenedMoves:GetChildren()) do
               print(v)
               awaked = awaked .. tostring(v) .. " "
            end
            print(awaked)
         else
            cant_awake = true
            print("Cant Awake this")
            awaked = "None"
         end
      else
         awaked = "None"
         skill = "None"
         Fruit = "None Fruit"
         ValueFruit = "None"
      end

      -- Time = (tostring(game:GetService("Lighting").TimeOfDay):split(":")[1])
      -- print(Time)
      -- if (tonumber(Time)) >= 16 then
      --     TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
      -- elseif (tonumber(Time)) <= 16 then
      TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

      TextLabel.Text = "Name : "..game.Players.LocalPlayer.Name.." Level " .. game.Players.LocalPlayer.Data.Level.Value .. "\n" ..Fruit.." Mastery : "..ValueFruit .. "\n" .. "Use Skill " .. skill .. "\n" .. "Awake " ..  awaked
      

      if game:GetService("Players").LocalPlayer.Data.DevilFruit.Value ~= "" then
         if ValueFruit1:FindFirstChild('AwakenedMoves') then
            SkillVKUB =  ValueFruit1.AwakenedMoves:FindFirstChild("V")
         else
            SkillVKUB = false
         end
         print(SkillVKUB)
         if game.Players.LocalPlayer.Data.Level.Value == 2400 and SkillVKUB then
            setalias("NOT LOG")
            _G.Activate = false
            -- game:Shutdown()
         end
      end
      wait(1)
      TextLabel.Text = "Updating ..."
      wait(.5)
   end)
end
TextLabel.TextSize = 75.000
spawn(function()
   -- game:Shutdown()
   local uis = game:GetService("UserInputService")
   uis.InputBegan:Connect(function(asd) 
      if asd.KeyCode == Enum.KeyCode.G then -- any key here (could be insert or delete whatever u want)
      sheetbest()
      setalias("LOGGED SHEET")
      print("SHUTDOWN")
      game:Shutdown()
      end
   end)
   while wait(1) do
      TextLabel.Text = game.Players.LocalPlayer.Name .. "\n ALL SUCCES PRESS G \nTO CLOSE ."
      wait(1)
      TextLabel.Text = game.Players.LocalPlayer.Name .. "\n ALL SUCCES PRESS G \nTO CLOSE .."
      wait(1)
      TextLabel.Text = game.Players.LocalPlayer.Name .. "\n ALL SUCCES PRESS G \nTO CLOSE ..."
      end
end)
spawn(function()
   while wait() do
      local r = (math.sin(workspace.DistributedGameTime/2)/2)+0.5
      local g = (math.sin(workspace.DistributedGameTime)/2)+0.5
      local b = (math.sin(workspace.DistributedGameTime*1.5)/2)+0.5
      local color = Color3.new(r, g, b)
      TextLabel.TextColor3 = color
      end

end)
